//
//  UDBStudentInformation.swift
//  On The Map
//
//  Created by Peter Khotpanya on 11/1/16.
//  Copyright Â© 2016 Peter Khotpanya. All rights reserved.
//
//  The struct data structure for student locations and links.

import UIKit

struct UDBStudentInformation {
    
    let objectId: String //an auto-generated id/key generated by Parse which uniquely identifies a StudentLocation
    let uniqueKey: String //an extra (optional) key used to uniquely identify a StudentLocation; you should populate this value using your Udacity account id
    var firstName: String //the first name of the student which matches their Udacity profile first name
    var lastName: String //the last name of the student which matches their Udacity profile last name
    var mapString: String //the location string used for geocoding the student location
    var mediaURL: String //the URL provided by the student
    var latitude: Float //the latitude of the student location (ranges from -90 to 90)
    var longitude: Float //the longitude of the student location (ranges from -180 to 180)
    
    enum UDBStudentInformationKeys: String{
        case objectId, uniqueKey, firstName, lastName, mapString, mediaURL, latitude, longitude
    }
    
    init(dictionary: [String:AnyObject]){
        objectId = dictionary[UDBStudentInformationKeys.objectId.rawValue] as! String
        uniqueKey = dictionary[UDBStudentInformationKeys.uniqueKey.rawValue] as! String
        firstName = dictionary[UDBStudentInformationKeys.firstName.rawValue] as! String
        lastName = dictionary[UDBStudentInformationKeys.lastName.rawValue] as! String
        mapString = dictionary[UDBStudentInformationKeys.mapString.rawValue] as! String
        mediaURL = dictionary[UDBStudentInformationKeys.mediaURL.rawValue] as! String
        latitude = dictionary[UDBStudentInformationKeys.latitude.rawValue] as! Float
        longitude = dictionary[UDBStudentInformationKeys.longitude.rawValue] as! Float
    }
}
